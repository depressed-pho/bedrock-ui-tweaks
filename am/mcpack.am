# -----------------------------------------------------------------------------
# Requires:
# - AX_MCPACK_GENERATE_DIFF_FILE([yes|no]) to have been invoked.
# - AM_SILENT_RULES([yes|no]) to have been invoked.
# - Makefile variable JQ to have been defined.
# - Automake variables MCPACK_FILES, CLEANFILES, noinst_DATA,
#   EXTRA_DIST to have been defined.
# -----------------------------------------------------------------------------
pack_base  = $(PACKAGE_TARNAME)-$(PACKAGE_VERSION)
pack_name  = $(pack_base).mcpack
pack_files = $(MCPACK_FILES:%.yaml=%.json)

noinst_DATA += $(pack_name)
CLEANFILES  += $(pack_name)
EXTRA_DIST  += $(filter-out manifest.json,$(filter-out manifest.yaml,$(MCPACK_FILES)))

if GENERATE_DIFF_FILE
pack_files  += $(pack_base).diff
noinst_DATA += $(pack_base).diff

$(pack_base).diff: $(MCPACK_FILES)
	$(AM_V_GEN)
	$(AM_V_at)(cd $(top_srcdir) && \
		echo "This file contains all the differences from vanilla to $(PACKAGE_STRING)." | fold -s -w 79; \
		echo; \
		LC_ALL=C $(DIFF) \
			--ignore-all-space \
			--minimal \
			--recursive \
			--unidirectional-new-file \
			--unified \
			--exclude="$@" \
			--exclude="*.svg" \
			--exclude="*.in" \
			--exclude="*.in~" \
			--exclude="Makefile*" \
			--exclude="manifest.*" \
			orig src | \
		$(SED) -e '/^Only in /d') > $@
endif

.PHONY: validate-json
validate-json:
	@set -eu; \
	for f in $(filter %.json,$(MCPACK_FILES)); do \
		( \
			if $(AM_V_P); then \
				set -x; \
			else \
				echo "  VALIDATE $$f"; \
			fi; \
			if test -f "$(srcdir)/$$f"; then \
				path="$(srcdir)/$$f"; \
			else \
				path="$(builddir)/$$f"; \
			fi; \
			$(JQ) . "$$path" >/dev/null \
		); \
	done

$(pack_name): $(pack_files) $(MCPACK_EXTRA_FILES) validate-json
	$(AM_V_GEN)
	$(AM_V_at)rm -rf $(pack_base)
	$(AM_V_at)$(MKDIR_P) $(pack_base)
# This is the hardest part... Here we build a staging directory but
# the problem is that $(pack_files) can either be relative to
# $(srcdir) or $(builddir).
	$(AM_V_at)for f in $(pack_files); do \
		if test -f "$(srcdir)/$$f"; then \
			echo "-C $(srcdir)"; \
		else \
			echo "-C $(builddir)"; \
		fi; \
		echo "$$f"; \
	done | tar -cf - -T - | tar -xf - -C $(pack_base)
	$(AM_V_at)for f in $(MCPACK_EXTRA_FILES); do \
		cp "$$f" "$(pack_base)"; \
	done
# We don't need the root directory for .mcpack files.
	$(AM_V_at)rm -f $@
	@if $(AM_V_P); then \
		(cd $(pack_base) && $(ZIP) -rv ../$@ *); \
	else \
		(cd $(pack_base) && $(ZIP) -rq ../$@ *); \
	fi
	$(AM_V_at)rm -rf $(pack_base)

install-data-local: $(pack_name)
	@set -eu; \
	if test -n "$(MCPACK_INSTALLATION_DIRECTORY)"; then \
		if $(AM_V_P); then set -x; fi; \
		rm -rf "$(MCPACK_INSTALLATION_DIRECTORY)"; \
		mkdir -p "$(MCPACK_INSTALLATION_DIRECTORY)"; \
		$(UNZIP) "$(pack_name)" -d "$(MCPACK_INSTALLATION_DIRECTORY)"; \
	fi
